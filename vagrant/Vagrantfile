Vagrant.configure("2") do |config|
    hosts = {
        "k3s-server" => "192.168.50.11",
        "k3s-agent1" => "192.168.50.12",
        "k3s-agent2" => "192.168.50.13",
    }

    ansible_groups = {
        "k3s_control_node" => ["k3s-server"],
        "k3s_worker_nodes" => ["k3s-agent1", "k3s-agent2"],
        "k3s_control_node:vars" => {
           "istio_version" => "1.16.1",
           "cluster_cidr" => "10.10.0.0/16",
           "k3s_node_token_path" => "/var/lib/rancher/k3s/server/node-token",
           "k3s_yaml_path" => "/etc/rancher/k3s/k3s.yaml",
           "k3s_service_path" => "/etc/systemd/system/k3s.service",
           "kube_config_folder" => "~/.kube",
           "kube_config_path" => "~/.kube/config",
           "tmp_path": "/tmp"
        },
        "k3s_worker_nodes:vars" => {
           "control_node_url" => "https:/#{hosts[0]}:6443",
           "k3s_service_path" => "/etc/systemd/system/k3s-agent.service",
           "tmp_path" => "/tmp"
        }
    }

    config.vm.box = "k3s-cluster-base"

    config.ssh.insert_key = false
    config.ssh.forward_agent = true
    check_guest_additions = false
    functional_vboxsf = false

    hosts.each do |name, ip|
        config.vm.define name do |machine|
            machine.vm.network :private_network, ip: ip
            machine.vm.hostname = name

            machine.vm.provider "virtualbox" do |vb|
                vb.name = name
                vb.linked_clone = true
            end

            machine.vm.provision "file", source: "id_rsa", destination: "/home/vagrant/.ssh/id_rsa"
            machine.vm.provision "file", source: "host_rsa.pub", destination: "/home/vagrant/id_rsa.pub"
            machine.vm.provision :shell, path: "scripts/bootstrap.sh", privileged: false
        end
    end

    config.vm.provision "ansible" do |ansible|
        ansible.playbook = "../ansible/playbook-k3s-server.yaml"
        ansible.groups = ansible_groups
    end

    config.vm.provision "ansible" do |ansible|
        ansible.playbook = "../ansible/playbook-k3s-agent.yaml"
        ansible.groups = ansible_groups
    end

    config.vm.provision "ansible" do |ansible|
        ansible.playbook = "../ansible/playbook-k3s-istio.yaml"
        ansible.groups = ansible_groups
    end
end