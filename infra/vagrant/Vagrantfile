require 'yaml'

if (File.exists?(".vagrant/hosts.yaml"))
    current_dir     = File.dirname(File.expand_path(__FILE__))
    cfg             = YAML.load_file(".vagrant/hosts.yaml")

    gateway         = cfg["gateway"]
    environment     = cfg["environment"]
    hosts           = cfg["hosts"]
else
    puts "ERROR: Hosts file .vagrant/hosts.yaml does not exist!"
    exit 1
end

Vagrant.configure("2") do |config|
    config.ssh.insert_key = false
    config.ssh.forward_agent = true
    config.vm.synced_folder ".", "/vagrant", id: "vagrant-root", disabled: true

    hosts.each do |name, ip|
#         config.vm.define name do |machine|
#             machine.vm.network :public_network
#             machine.vm.hostname = name
#             machine.vm.box = "ubuntu-22.04.1-x86_64.vmf"
#
#             machine.vm.provider "vmware_fusion" do |v|
#                 v.gui = true
#                 v.ssh_info_public = true
#                 v.linked_clone = true
#                 v.vmx['displayname'] = name
#             end
#
#             File.open(".vagrant/env.sh", "w") {|f| f.write("export IP_ADDR=#{ip}; export GATE=#{gateway}") }
#
#             machine.vm.provision "file", source: "~/.ssh/id_rsa.pub", destination: "/home/vagrant/id_rsa.pub"
#             machine.vm.provision "file", source: "scripts/bootstrap.sh", destination: "/home/vagrant/bootstrap.sh"
#             machine.vm.provision "file", source: ".vagrant/env.sh", destination: "/home/vagrant/env.sh"
#             machine.vm.provision "file", source: "scripts/netplan.sh", destination: "/home/vagrant/netplan.sh"
#         end

        config.vm.define name do |machine|
            machine.vm.box = "ubuntu-22.04.1-x86_64.vbox"
            machine.vm.network :private_network, ip: ip
            machine.vm.hostname = name

            machine.vm.provider "virtualbox" do |vb|
                vb.name = name
                vb.linked_clone = true
            end

            machine.vm.provision "file", source: "~/.ssh/id_rsa.pub", destination: "/home/vagrant/id_rsa.pub"
            machine.vm.provision "ssh_keys", type: "shell" do |s|
                s.path = "scripts/bootstrap.sh"
                s.privileged = false
            end
        end
    end
end


